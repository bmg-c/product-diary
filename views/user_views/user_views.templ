package user_views

import (
	"github.com/bmg-c/product-diary/views"
	"github.com/bmg-c/product-diary/schemas/user_schemas"
	L "github.com/bmg-c/product-diary/localization"
	"fmt"
)

templ ProfileBlock(l *L.Localizer, user user_schemas.UserPublic, persons []user_schemas.PersonDB) {
	<div style="display: flex; flex-direction: column; gap: 8px;">
		<h3>{ l.GetLocalized(L.MsgProfileInfo) }</h3>
		@User(user)
		@PersonBlock(l, persons)
	</div>
}

templ Person(l *L.Localizer, person user_schemas.PersonDB) {
	<div style="display: flex; flex-direction: row; gap: 12px;" hx-target="this">
		<form>
			if person.IsHidden {
				<input
					name="person_name"
					type="text"
					value={ person.PersonName }
					style="color: gray;"
					readonly
				/>
			} else {
				<input
					name="person_name"
					type="text"
					value={ person.PersonName }
					readonly
				/>
			}
			<button
				type="button"
				hx-post="/api/users/person/togglehidden"
				hx-swap="outerHTML"
			>
				if person.IsHidden {
					{ l.GetLocalized(L.MsgUnhide) }
				} else {
					{ l.GetLocalized(L.MsgHide) }
				}
			</button>
		</form>
	</div>
}

templ PersonList(l *L.Localizer, persons []user_schemas.PersonDB) {
	<div id="user-person-list" style="display: flex; flex-direction: column; gap: 4px;">
		for _, person := range persons {
			@Person(l, person)
		}
	</div>
}

templ PersonBlock(l *L.Localizer, persons []user_schemas.PersonDB) {
	<div style="display: flex; flex-direction: column; gap: 8px;">
		<h3>{ l.GetLocalized(L.MsgPersons) }</h3>
		<form id="form-add-user" style="padding-bottom: 8px">
			<input
				name="person_name"
				type="text"
				placeholder={ l.GetLocalized(L.MsgUsername) }
			/>
			<button
				type="button"
				hx-post="/api/users/person/addperson"
				hx-target="#user-person-list"
				hx-swap="beforeend"
			>{ l.GetLocalized(L.MsgAdd) }</button>
		</form>
		@PersonList(l, persons)
	</div>
}

type LoginData struct {
	Email        string
	Password     string
	SuccessLogin bool
}

templ LoginIndex(l *L.Localizer, data LoginData) {
	<form id="user-login">
		<input type="email" name="email" placeholder={ l.GetLocalized(L.MsgEmailPlaceholder) } value={ data.Email }/>
		<input type="password" name="password" placeholder="*******" value={ data.Password }/>
		<button
			type="button"
			hx-post="/api/users/login/login"
			hx-target="#user-login"
			hx-swap="outerHTML"
		>{ l.GetLocalized(L.MsgLogIn) }</button>
	</form>
	if data.SuccessLogin {
		<div id="main" hx-swap-oob="innerHTML">
			@UsersPage(l)
		</div>
	}
}

templ EndSignin(l *L.Localizer, email string) {
	<span>{ l.GetLocalized(L.MsgLoginInfoSent, email) }</span>
}

type SigninData struct {
	CodeSent bool
	Email    string
	Err      error
}

templ SigninIndex(l *L.Localizer, data SigninData) {
	<form id="user-signin">
		<input
			type="email"
			name="email"
			placeholder={ l.GetLocalized(L.MsgEmailPlaceholder) }
			value={ data.Email }
			readonly?={ data.CodeSent }
		/>
		if data.CodeSent {
			<input type="text" name="code" placeholder={ l.GetLocalized(L.MsgCodePlaceholder) }/>
		}
		<button
			type="button"
			hx-post="/api/users/signin/signin"
			hx-target="#user-signin"
			hx-swap="outerHTML"
		>{ l.GetLocalized(L.MsgSignIn) }</button>
		if data.Err != nil {
			@ErrorMsg(l, data.Err)
		}
	</form>
}

templ User(data user_schemas.UserPublic) {
	<div style="display: flex; flex-direction: column">
		<span>UserID: { fmt.Sprint(data.UserID) }</span>
		<span>Email: { data.Email }</span>
		<span>Username: { data.Username }</span>
		<span>Created at: { data.CreatedAt.String() }</span>
	</div>
}

templ ErrorMsg(l *L.Localizer, err error) {
	if err != nil {
		<div id="user-output-error" hx-swap-oob="innerHTML"><span style="color: red">{ l.Localize(err.Error()) }</span></div>
	}
}

templ UserIndex(l *L.Localizer) {
	<form>
		<input type="number" name="id"/>
		<button type="button" hx-post="/api/users/user/getuser" hx-target="#user-output-user">{ l.GetLocalized(L.MsgFindUser) }</button>
	</form>
	<div id="user-output-user"></div>
}

templ UserlistIndex(ul []user_schemas.UserPublic) {
	<ul>
		for _, user := range ul {
			<li>
				@User(user)
			</li>
		}
	</ul>
}

templ UserControls(l *L.Localizer, authorized bool) {
	<button
		type="button"
		hx-target="#user-output"
		hx-get="/api/users/userlist/index"
		hx-on::after-request="document.getElementById('user-title-section').innerHTML = event.target.innerHTML"
	>{ l.GetLocalized(L.MsgUserList) }</button>
	<button
		type="button"
		hx-target="#user-output"
		hx-get="/api/users/user/index"
		hx-on::after-request="document.getElementById('user-title-section').innerHTML = event.target.innerHTML"
	>{ l.GetLocalized(L.MsgUserByID) }</button>
	if authorized {
		<button
			type="button"
			hx-target="#user-output"
			hx-get="/api/users/profile/index"
			hx-on::after-request="document.getElementById('user-title-section').innerHTML = event.target.innerHTML"
		>{ l.GetLocalized(L.MsgProfileInfo) }</button>
		<button
			type="button"
			hx-target="#main"
			hx-post="/api/users/logout/logout"
		>{ l.GetLocalized(L.MsgLogOut) }</button>
	} else {
		<button
			type="button"
			hx-target="#user-output"
			hx-get="/api/users/signin/index"
			hx-on::after-request="document.getElementById('user-title-section').innerHTML = event.target.innerHTML"
		>{ l.GetLocalized(L.MsgSignIn) }</button>
		<button
			type="button"
			hx-target="#user-output"
			hx-get="/api/users/login/index"
			hx-on::after-request="document.getElementById('user-title-section').innerHTML = event.target.innerHTML"
		>{ l.GetLocalized(L.MsgLogIn) }</button>
	}
}

templ UsersPage(l *L.Localizer) {
	@views.Layout("Users") {
		<script>
            document.addEventListener("DOMContentLoaded", (event) => {
                document.body.addEventListener('htmx:beforeSwap', function(evt) {
                    if (evt.detail.xhr.status == 422 || evt.detail.xhr.status == 404) {
                        evt.detail.shouldSwap = true;
                        evt.detail.isError = false;
                    } else if (evt.detail.xhr.status == 200) {
                        document.getElementById("user-output-error").innerHTML = ""
                    }
                });
            });
        </script>
		<h3>{ l.GetLocalized(L.MsgUserControl) }: <span id="user-title-section">{ l.GetLocalized(L.MsgUserList) }</span></h3>
		<div id="user-control-buttons" hx-get="/api/users/controls/index" hx-trigger="load"></div>
		<div id="user-output" hx-get="/api/users/userlist/index" hx-trigger="load"></div>
		<div id="user-output-error"></div>
	}
}
